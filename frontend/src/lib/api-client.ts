/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** HealthCheck */
        get: operations["HealthHealthCheck"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company/{ticker}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** GetCompany */
        get: operations["CompanyTickerGetCompany"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** SearchCompanies */
        post: operations["CompanySearchSearchCompanies"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CompanyComparablesSchema */
        CompanyComparablesSchema: {
            median_ev_to_revenue?: number | null;
            median_ev_to_ebitda?: number | null;
            median_pe_ratio?: number | null;
        };
        /** CompanyPredictionsSchema */
        CompanyPredictionsSchema: {
            projected_5y_share_price?: number | null;
        };
        /** CompanySchema */
        CompanySchema: {
            id: string;
            name: string;
            ticker: string;
            industry?: string | null;
            filings: components["schemas"]["FilingSchema"][];
            latest_filing?: components["schemas"]["FilingSchema"] | null;
            stats?: components["schemas"]["CompanyStatsSchema"] | null;
            comparables?: components["schemas"]["CompanyComparablesSchema"] | null;
            predictions?: components["schemas"]["CompanyPredictionsSchema"] | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
        };
        /** CompanySearchFilters */
        CompanySearchFilters: {
            industries?: string[] | null;
            subIndustries?: string[] | null;
            numericRanges?: {
                [key: string]: components["schemas"]["NumericRange"];
            } | null;
        };
        /** CompanySearchResultSchema */
        CompanySearchResultSchema: {
            id: string;
            name: string;
            ticker: string;
            industry?: string | null;
            equity_value?: number | null;
            ltm_revenue?: number | null;
            multiple_ev_to_revenue?: number | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
        };
        /** CompanySearchSchema */
        CompanySearchSchema: {
            search?: string | null;
            filters?: components["schemas"]["CompanySearchFilters"] | null;
            sorting?: components["schemas"]["SortCriterion"][] | null;
            pagination?: components["schemas"]["Pagination"] | null;
        };
        /** CompanyStatsSchema */
        CompanyStatsSchema: {
            ltm_revenue?: number | null;
            ltm_revenue_growth?: number | null;
            ltm_net_income?: number | null;
            ltm_ebitda?: number | null;
            share_price?: number | null;
            shares_outstanding?: number | null;
            equity_value?: number | null;
            cash?: number | null;
            debt?: number | null;
            enterprise_value?: number | null;
            multiple_ev_to_revenue?: number | null;
            multiple_ev_to_ebitda?: number | null;
            price_to_earnings?: number | null;
            median_fund_investment_percentage_change?: number | null;
        };
        /** FilingSchema */
        FilingSchema: {
            id: string;
            cik: string;
            company_id: string;
            /** @enum {string} */
            type: "10-Q" | "10-K";
            /** Format: date-time */
            period_end: string;
            /** Format: date-time */
            filing_date: string;
            revenue?: number | null;
            net_income?: number | null;
            ebitda?: number | null;
            shares_outstanding?: number | null;
            cash?: number | null;
            debt?: number | null;
            document_url?: string | null;
            /** @enum {string|null} */
            source?: "EDGAR" | "Manual" | "Other" | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
        };
        /** NumericRange */
        NumericRange: {
            min?: number | null;
            max?: number | null;
        };
        /** Pagination */
        Pagination: {
            offset?: number | null;
            limit?: number | null;
        };
        /** SortCriterion */
        SortCriterion: {
            field: string;
            /** @enum {string} */
            direction: "asc" | "desc";
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    HealthHealthCheck: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request fulfilled, document follows */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
        };
    };
    CompanyTickerGetCompany: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                ticker: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request fulfilled, document follows */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanySchema"];
                };
            };
            /** @description Bad request syntax or unsupported method */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status_code: number;
                        detail: string;
                        extra?: null | {
                            [key: string]: unknown;
                        } | unknown[];
                    };
                };
            };
        };
    };
    CompanySearchSearchCompanies: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompanySearchSchema"];
            };
        };
        responses: {
            /** @description Document created, URL follows */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanySearchResultSchema"][];
                };
            };
            /** @description Bad request syntax or unsupported method */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status_code: number;
                        detail: string;
                        extra?: null | {
                            [key: string]: unknown;
                        } | unknown[];
                    };
                };
            };
        };
    };
}
