// This file is auto-generated by @hey-api/openapi-ts

export const $CompanyComparablesSchema = {
    properties: {
        median_ev_to_revenue: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        median_ev_to_ebitda: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        median_pe_ratio: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'CompanyComparablesSchema'
} as const;

export const $CompanyPredictionsSchema = {
    properties: {
        projected_5y_share_price: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'CompanyPredictionsSchema'
} as const;

export const $CompanySchema = {
    properties: {
        id: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        ticker: {
            type: 'string'
        },
        industry: {
            oneOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ]
        },
        filings: {
            items: {
                '$ref': '#/components/schemas/FilingSchema'
            },
            type: 'array'
        },
        latest_filing: {
            oneOf: [
                {
                    '$ref': '#/components/schemas/FilingSchema'
                },
                {
                    type: 'null'
                }
            ]
        },
        stats: {
            oneOf: [
                {
                    '$ref': '#/components/schemas/CompanyStatsSchema'
                },
                {
                    type: 'null'
                }
            ]
        },
        comparables: {
            oneOf: [
                {
                    '$ref': '#/components/schemas/CompanyComparablesSchema'
                },
                {
                    type: 'null'
                }
            ]
        },
        predictions: {
            oneOf: [
                {
                    '$ref': '#/components/schemas/CompanyPredictionsSchema'
                },
                {
                    type: 'null'
                }
            ]
        },
        created_at: {
            type: 'string',
            format: 'date-time'
        },
        updated_at: {
            type: 'string',
            format: 'date-time'
        }
    },
    type: 'object',
    required: ['created_at', 'filings', 'id', 'name', 'ticker', 'updated_at'],
    title: 'CompanySchema'
} as const;

export const $CompanySearchFilters = {
    properties: {
        industries: {
            oneOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ]
        },
        subIndustries: {
            oneOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ]
        },
        numericRanges: {
            oneOf: [
                {
                    additionalProperties: {
                        '$ref': '#/components/schemas/NumericRange'
                    },
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'CompanySearchFilters'
} as const;

export const $CompanySearchResultSchema = {
    properties: {
        id: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        ticker: {
            type: 'string'
        },
        industry: {
            oneOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ]
        },
        equity_value: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        ltm_revenue: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        multiple_ev_to_revenue: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        created_at: {
            type: 'string',
            format: 'date-time'
        },
        updated_at: {
            type: 'string',
            format: 'date-time'
        }
    },
    type: 'object',
    required: ['created_at', 'id', 'name', 'ticker', 'updated_at'],
    title: 'CompanySearchResultSchema'
} as const;

export const $CompanySearchSchema = {
    properties: {
        search: {
            oneOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ]
        },
        filters: {
            oneOf: [
                {
                    '$ref': '#/components/schemas/CompanySearchFilters'
                },
                {
                    type: 'null'
                }
            ]
        },
        sorting: {
            oneOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/SortCriterion'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ]
        },
        pagination: {
            oneOf: [
                {
                    '$ref': '#/components/schemas/Pagination'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'CompanySearchSchema'
} as const;

export const $CompanyStatsSchema = {
    properties: {
        ltm_revenue: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        ltm_revenue_growth: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        ltm_net_income: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        ltm_ebitda: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        share_price: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        shares_outstanding: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        equity_value: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        cash: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        debt: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        enterprise_value: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        multiple_ev_to_revenue: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        multiple_ev_to_ebitda: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        price_to_earnings: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        median_fund_investment_percentage_change: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'CompanyStatsSchema'
} as const;

export const $FilingSchema = {
    properties: {
        id: {
            type: 'string'
        },
        cik: {
            type: 'string'
        },
        company_id: {
            type: 'string'
        },
        type: {
            type: 'string',
            enum: ['10-Q', '10-K']
        },
        period_end: {
            type: 'string',
            format: 'date-time'
        },
        filing_date: {
            type: 'string',
            format: 'date-time'
        },
        revenue: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        net_income: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        ebitda: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        shares_outstanding: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        cash: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        debt: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        document_url: {
            oneOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ]
        },
        source: {
            type: ['string', 'null'],
            enum: ['EDGAR', 'Manual', 'Other', null]
        },
        created_at: {
            type: 'string',
            format: 'date-time'
        },
        updated_at: {
            type: 'string',
            format: 'date-time'
        }
    },
    type: 'object',
    required: ['cik', 'company_id', 'created_at', 'filing_date', 'id', 'period_end', 'type', 'updated_at'],
    title: 'FilingSchema'
} as const;

export const $NumericRange = {
    properties: {
        min: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        },
        max: {
            oneOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'NumericRange'
} as const;

export const $Pagination = {
    properties: {
        offset: {
            oneOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ]
        },
        limit: {
            oneOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: [],
    title: 'Pagination'
} as const;

export const $SortCriterion = {
    properties: {
        field: {
            type: 'string'
        },
        direction: {
            type: 'string',
            enum: ['asc', 'desc']
        }
    },
    type: 'object',
    required: ['direction', 'field'],
    title: 'SortCriterion'
} as const;